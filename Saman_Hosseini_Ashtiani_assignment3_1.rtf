{\rtf1\ansi\deff4\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq0\fcharset128 Times New Roman;}{\f5\froman\fprq0\fcharset128 AdvP40319B;}{\f6\fnil\fprq0\fcharset0 AdvP40319B;}{\f7\fnil\fprq2\fcharset0 Times New Roman;}{\f8\fnil\fprq2\fcharset0 AdvP40319B;}{\f9\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033 Normal;}
{\s1\sbasedon15\snext1\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\b\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs36\lang1033 Heading 1;}
{\s2\sbasedon15\snext2\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs32\lang1033 Heading 2;}
{\s3\sbasedon15\snext3\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs32\lang1033 Heading 3;}
{\s15\sbasedon0\snext16\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs32\lang1033 Heading;}
{\s16\sbasedon0\snext16\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033 Text Body;}
{\s17\sbasedon16\snext17\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033 List;}
{\s18\sbasedon0\snext18\ql\widctlpar\hyphpar0\sb120\sa120\ltrpar\cf1\i\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033 Caption;}
{\s19\sbasedon0\snext19\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033 Index;}
{\s20\sbasedon0\snext20\ql\widctlpar\tqc\tx4986\tqr\tx9972\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033 Header;}
}{\*\generator LibreOffice_Vanilla/5.2.3.5$MacOSX_X86_64 LibreOffice_project/83adc9c35c74e0badc710d981405858b1179a327}{\info{\creatim\yr2017\mo6\dy11\hr12\min36}{\revtim\yr2017\mo6\dy12\hr10\min42}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab420
\hyphauto0\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s2\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs32\lang1033\sb240\sa120{\rtlch \ltrch\loch
1) }{\rtlch \ltrch\loch
A quick guide to organizing computational biology projects}
\par \pard\plain \s16\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar{\rtlch \ltrch\loch
This paper mainly focuses on a descriptive approach how to organize computational biology projectes rather than a prescrive one. According to the gist of this paper, the main idea is to organize your project in such a way that even a person unamiliar with it can look at your files and directroies and grasp a detailed understanding of what you did besides how you did. The second main idea is that because you may need to redo everything you\uc2 \u8217\'81\'66ve done, it\u8217\'81\'66s more convenient to have well-organized and -documented experiment. It\u8217\'81\'66s a good idea to store all of files related to a project under a root diectory. In a typical project there could be a top-level logical organization with a chronological organization at a sublevel and again a logical organization at the next level. Nonetheless it is recommended that  \u8220\'81\'67data\u8221\'81\'68 and \u8220\'81\'67results\u8221\'81\'68 directories arechronologically organized so that later anyone else or even the project owner will clearly and easily trace back any step. Lab Notebook is another highlight in this papar. It is emphasized to be useful to record a detailed and dated report of the project. Lab notebook also contains  observations, conclusions and failure points in addition to every conversation such as email related to the project. Recording every operation that you perform is a principle which is done by creating a \u8220\'81\'67read me\u8221\'81\'68 file or a \u8220\'81\'67driver script\u8221\'81\'68 which is called by the author as \u8220\'81\'67runall\u8221\'81\'68. This runall performs the entire experiment automatically. Some rulls have been described for creating a driver script such as recording evry operation that you perform, commenting gererously, avoiding editting intermediate files by hand, keeping all files and directory names, using relative pathnames instead of absolute pathnames so that the script will work on others\u8217\'81\'66 local directories and making the script restartable in a way that if you want to delete some output files and redo the corresponding parts, it can be feasible through codes with general format of : if output file doesn\u8217\'81\'66t exist, then do the operation. There are three suggestions for error handling, namely, writng robust code to detect errors, aborting the program when an error occurs so that you won\u8217\'81\'66t overlook any error and finally creating each output file using a temporary name and then renaming them when they are complete. Regarding the programming part, the author suggests iterative improvement of codes and scripts depending on how often and at what level of functionality it is used i.e. from simple shell script to Python and to C if necessary. It is also emphasized that every code shoud have a clearly documented interface including its detailed usage explaining what input and outputs are and what the available options are. Another highlight in this paper is the recommendation of Version Control software. The main invaluable advantages of such software are as follows: prividing a form of backup, providing a historical record that is useful for finding bugs or viewing old results and most importantly being very handy for collaborative projects. All in all, this paper described many aspects of how to efficiently perform computational experiments in an accurate and reproducible way. \uc1 }
\par \pard\plain \s2\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs32\lang1033\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar{\rtlch \ltrch\loch
2) }{\rtlch \ltrch\loch
Ten Simple Rules for Reproducible Computational Research}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch
This paper chiefly indicates the importance of replication and reproducibility of studies up to a level that mentions the reproducibility of a research as a minimum standard for examining the value of scientific claims. It is noted that incremented number of retracted papers, failing clinical trials and difficulties with reproducing published experiments has fostered the importance of this issue. Among the ten rules for reproducible research, only those that have not been mentioned in the first paper are reviewed: in rule 6, it is suggested that for each analysis involving randomness, the underlying random seeds should be noted. In rule 7, the point which is a more detailed explanation of the importance of storing and marking the data, is storing raw data behind plots. And the last relatively extra piece of advice is providing public access to scripts, runs and results.}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s2\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs32\lang1033\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar{\rtlch \ltrch\loch
3) }{\rtlch \ltrch\loch
So you want to be a computational biologist?}
\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch
After giving a rough definition of the expression \uc2 \u8220\'81\'67computational biologist\u8221\'81\'68, this paper pinpoints the importance of learning computational skills for all modern biological studies at any level and then tries to show the way to becoming a computational biologist. It begins with denoting that the key step is to know your goals and choose appropriate methods accordingly. A complementary tip following up the first paper is setting checkpoints to verify if the code is working properly. Subsequently, running positive and negative controls for biologists has been denoted equivalent to \u8216\'81\'65tests\u8217\'81\'66 in computational biology.  It is indicated that as a scientist and not computer programmer, the correctness of the algorithm to yield the right results matters more than perfectionism regarding the code elegance or performance. Using version control is also recommended here. There\u8217\'81\'66s warning about not using pipeline too early before testing a method. It is highlighted that you should always keep in mind that biological data or analysis may involve noise or bias. The paper highlights that the knowledge of biology is critical in the analysis and interpretation of computational results and computational biologists should act like a detective in this regard through observations, questions, inspections and consulting other scientists. And finally it is proposed that you\u8217\'81\'66d better hook up with other computational biologists that might already have solved the same problems to save time and resources.  \uc1 }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s2\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs32\lang1033{\rtlch \ltrch\loch
4) }{\rtlch \ltrch\loch
Best Practices for Scientific Computing }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch
This paper mainly deals with the best ways of scientific computing. }{\rtlch \ltrch\loch
Below are listed the items which are either not dealt with in previous papers or look at the same issue from a different angle of view:}{\rtlch \ltrch\loch
 1) write your code in such a way that is easily readable by the user. }{\rtlch \ltrch\loch
2}{\rtlch \ltrch\loch
) go through a step by step change and improvement of software using version control software. }{\rtlch \ltrch\loch
3}{\rtlch \ltrch\loch
) avoid redundant code through modularizing and reusing code. }{\rtlch \ltrch\loch
4}{\rtlch \ltrch\loch
) first, make sure about the correct output from your software and then proceed to its optimization. }{\rtlch \ltrch\loch
5}{\rtlch \ltrch\loch
) document the algorithm including interfaces and reasons not the implementation of the code. 8) use the review }{\rtlch \ltrch\loch
and consult}{\rtlch \ltrch\loch
 }{\rtlch \ltrch\loch
from }{\rtlch \ltrch\loch
other programmers to correct mistakes and bugs. It\uc2 \u8217\'81\'66s better to do the code review before it is committed to a shared version control software. \uc1 }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s2\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs32\lang1033{\rtlch \ltrch\loch
5) }{\rtlch \ltrch\loch
Ten Simple Rules for the Open Development of Scientific Software }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch
In this paper there\uc2 \u8217\'81\'66s a rough idea of the development of general  \uc1 }{\rtlch \ltrch\loch
open-source }{\rtlch \ltrch\loch
scientific software. }{\rtlch \ltrch\loch
Public  release of scientific code has many rewarding benefits such as assigning the resource and maintenance burden to others leading to promising sustainability of the software. Some more software-development rules are outlined in this paper as well. 1) Don\uc2 \u8217\'81\'66t reinvent the wheel unless all other resources don\u8217\'81\'66t have anything to offer for your specific problem. 2) Code well through learning the basics of software development, studying other\u8217\'81\'66s code and learning by practice and joining existing open-source projects. 3) releasing open development codes could help the developers find the bugs and solve them even better compared to closed development. 4) writing simple code is critical to achieving more tries and reviews from others. 5) not being a perfectionist is advocated regarding the release of the first version of the source code. 6) try to promote your project to attract other users\u8217\'81\'66 attention and interest from the web-page and logo to attending conferences. 7) find sponsors for better support. 8) Keep in mind that the ultimate goal is achieving the scientific answers and solutions. It is the science that finally counts.\uc1 }
\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar{\rtlch \ltrch\loch
To conclude the main consensus tips and highlights in these five papers, they all recommend using a well defined and organized approach for writing good code and saving them besides results, comments and related ideas. Another critical advice is using a step by step computational development strategy particularly taking advantage of Version Control software so that keeping track of the code, reviewing it, debugging and higher levels of development is facilitated. }
\par \pard\plain \s2\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs32\lang1033\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar{\dbch\af8\rtlch \ltrch\fs40\loch\f5\hich\af5
 }
\par \pard\plain \s16\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s16\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\loch\f4\fs24\lang1033\sl288\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\rtlch \ltrch\loch

\par \pard\plain \s0\ql\widctlpar\hyphpar0\ltrpar\cf1\kerning1\dbch\af7\langfe1033\dbch\af9\afs24\alang1081\loch\f4\fs24\lang1033\ql\widctlpar\hyphpar0\ltrpar\rtlch \ltrch\loch

\par }